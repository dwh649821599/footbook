# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'search.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QWidget, QMainWindow, QApplication, QScrollArea, QDesktopWidget, QRadioButton, QScrollBar, \
    QPlainTextEdit, QLabel, QPushButton, QLineEdit, QMenu, QTableWidgetItem, QHBoxLayout, QVBoxLayout, QFileDialog
from PyQt5.QtGui import QPainter, QPen, QFont, QIcon, QPixmap, QCursor
from PyQt5.QtCore import Qt, QPoint, QCoreApplication, QRect, QThread, pyqtSignal
import gui.gui2network as ct
import sys, pickle, os, time
from pathlib import Path
import cv2
import gui.homepage as hp

class Search(object):
    def __init__(self, MainWindow, cthandle, refresh, issearch=True, isrequest=False, isaccept=False ,id='', name='', head=''):
        super(Search, self).__init__()
        self.issearch = issearch
        self.isrequest = isrequest
        self.isaccept = isaccept
        self.id = id
        self.name = name
        self.head = head
        self.refresh = refresh

        self.cthandle = cthandle

        self.setupUi(MainWindow)

    def setupUi(self, MainWindow):
        MainWindow.setWindowFlags(Qt.FramelessWindowHint)
        MainWindow.setAttribute(Qt.WA_TranslucentBackground)
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(360, 300)
        MainWindow.setMinimumSize(QtCore.QSize(360, 300))
        MainWindow.setMaximumSize(QtCore.QSize(360, 300))


        self.mw = MainWindow

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.centralwidget.setGeometry(QtCore.QRect(0, 0, 360, 300))
        self.minbtn = QtWidgets.QPushButton(self.centralwidget)
        self.minbtn.setGeometry(QtCore.QRect(300, 0, 30, 30))
        self.minbtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.minbtn.setObjectName("minbtn")
        self.closebtn = QtWidgets.QPushButton(self.centralwidget)
        self.closebtn.setGeometry(QtCore.QRect(330, 0, 30, 30))
        self.closebtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.closebtn.setObjectName("closebtn")
        self.idEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.idEdit.setGeometry(QtCore.QRect(50, 110, 261, 30))
        self.idEdit.setObjectName("idEdit")
        self.idEdit.setPlaceholderText('输入用户ID')
        self.searchbtn = QtWidgets.QPushButton(self.centralwidget)
        self.searchbtn.setGeometry(QtCore.QRect(320, 110, 30, 30))
        self.searchbtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.searchbtn.setObjectName("searchbtn")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(100, 60, 161, 31))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(14)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setWordWrap(True)
        self.label.setObjectName("label")
        self.label.setText('查找用户')
        self.searchResult = QtWidgets.QPushButton(self.centralwidget)
        self.searchResult.setGeometry(QtCore.QRect(50, 160, 260, 70))
        self.searchResult.setObjectName("searchResult")
        self.searchResult.setHidden(True)

        self.icon = QLabel()

        if self.head != '':
            with open('./temp/head.png', 'wb') as f:
                f.write(self.head)
            self.icon.setPixmap(QPixmap('./temp/head.png'))

        self.icon.setFixedSize(50, 50)

        self.friendid = QLabel()
        if self.id != '':
            self.friendid.setText(str(self.id))
        self.friendid.setFont(QFont('微软雅黑', 14))

        self.friendname = QLabel()
        if self.name != '':
            self.friendname.setText(str(self.name))
        self.friendname.setFont(QFont('微软雅黑', 14))

        self.hl = QHBoxLayout()

        self.searchResult.setLayout(self.hl)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.closebtn.clicked.connect(self.closepage)
        self.minbtn.clicked.connect(self.minimize)
        self.searchbtn.clicked.connect(self.search)
        self.searchResult.clicked.connect(self.friendRequest)

        self.setqss(MainWindow)

    def friendRequest(self):
        if self.id != '' and self.isrequest:
            try:
                self.cthandle.send_request('add_friend_request', str(self.id))

                self.closepage()
            except Exception as e:
                print(e)
        if self.id != '' and self.isaccept:
            try:
                self.cthandle.send_request('add_friend_accept', str(self.id))

                with open('./temp/head.png', 'wb') as f:
                    f.write(self.head)

                self.refresh(int(self.id), './temp/head.png')
                self.closepage()
            except Exception as e:
                print(e)

    def search(self):
        try:
            id = int(self.idEdit.text())
        except Exception as e:
            print(e)
        else:
            self.cthandle.send_request('search_friend', str(id))

    def setqss(self, MainWindow):
        with open('search.qss', 'r') as f:
             qssStyle = f.read()
        MainWindow.setStyleSheet(qssStyle)

    def closepage(self):
        self.isrequest = False
        self.isaccept = False
        self.idEdit.clear()
        self.searchResult.setHidden(True)
        self.mw.close()

    def minimize(self):
        self.mw.setWindowState(Qt.WindowMinimized)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))

if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Search(MainWindow, ct.ClientWrapper())
    MainWindow.show()
    sys.exit(app.exec_())